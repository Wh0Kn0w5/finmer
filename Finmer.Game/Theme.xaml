<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!-- ReSharper disable MarkupTextTypo -->

    <!-- Basic text styles -->
    <sys:Double x:Key="DefaultFontSize">14</sys:Double>
    <FontFamily x:Key="DefaultFont">./Resources/Fonts/#Nunito Sans,Segoe UI</FontFamily>
    <Style TargetType="TextBlock" x:Key="TextBlockBase">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style x:Key="TextBlockDefault" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>
    <Style x:Key="TextBlockLarge" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style x:Key="TextBlockLargest" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="TextBlockSubtle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
    </Style>

    <ControlTemplate x:Key="EntryBox">
        <Border
            x:Name="Border"
            BorderThickness="1"
            CornerRadius="2"
            Margin="2"
            Padding="4"
            Background="{StaticResource ForegroundBrush}">
            <ScrollViewer
                x:Name="PART_ContentHost"
                Margin="0" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DepressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DarkBackgroundBrush}" />
                <Setter Property="Background" TargetName="Border" Value="{StaticResource TextInputDisabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource TextInputEnabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource TextInputFocusedBackgroundBrush}" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HighlightBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="Template" Value="{StaticResource EntryBox}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="Template" Value="{StaticResource EntryBox}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxBackingButton" TargetType="ToggleButton">
        <Border
            x:Name="Border"
            BorderThickness="1"
            CornerRadius="2"
            Margin="2"
            Padding="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Grid.Column="0" />
                <Path
                    Grid.Column="1"
                    x:Name="Arrow"
                    Width="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    Fill="{StaticResource ForegroundBrush}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DarkBackgroundBrush}" />
                <Setter Property="Background" TargetName="Border" Value="{StaticResource TextInputDisabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DepressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DepressedBrush}" />
                <Setter Property="Background" TargetName="Border" Value="{StaticResource TextInputEnabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource TextInputFocusedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextInput" TargetType="TextBox">
        <ScrollViewer
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Margin="0" />
    </ControlTemplate>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxBackingButton}">
                            <Grid>
                                <ContentPresenter
                                    x:Name="ContentSite"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                                <TextBox
                                    Grid.Column="0"
                                    x:Name="PART_EditableTextBox"
                                    Foreground="{StaticResource ForegroundBrush}"
                                    Background="#00000000"
                                    Template="{StaticResource ComboBoxTextInput}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Visibility="Hidden" />
                            </Grid>
                        </ToggleButton>
                        <Popup
                            x:Name="PART_Popup"
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border
                                BorderBrush="{StaticResource DepressedBrush}"
                                BorderThickness="1"
                                CornerRadius="2"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                Background="{StaticResource BrightBackgroundBrush}">
                                <ScrollViewer
                                    VerticalScrollBarVisibility="Auto"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <StackPanel
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Command" Value="{Binding NavigateTo}" />
        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="FontWeight" Value="Thin" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Background" Value="{StaticResource BrightBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="16"
                                Height="16"
                                Margin="-1,1,0,0"
                                VerticalAlignment="Center"
                                CornerRadius="1"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark"
                                        Visibility="Collapsed"
                                        Width="10"
                                        Height="10"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Data="M 1 5 L 4 9 M 3 9 L 9 1">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{StaticResource ForegroundColor}" />
                                        </Path.Stroke>
                                    </Path>
                                    <Path
                                        x:Name="IndeterminateMark"
                                        Visibility="Collapsed"
                                        Width="10"
                                        Height="10"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Data="M 1 1 L 9 9">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{StaticResource ForegroundColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource HighlightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource TextInputFocusedBackground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource DepressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource BackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="IndeterminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Background" Value="{StaticResource BrightBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Margin="-1,0,0,0">
                                <Ellipse x:Name="Border"
                                    Width="20"
                                    Height="20"
                                    StrokeThickness="1"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    Fill="{TemplateBinding Background}" />
                                <Ellipse x:Name="CheckMark"
                                    Width="10"
                                    Height="10"
                                    Visibility="Hidden"
                                    Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Stroke.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource HighlightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Fill.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource TextInputFocusedBackground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Stroke.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource DepressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Fill.Color">
                                            <DiscreteColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource BackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Padding" Value="4" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{StaticResource ButtonDisabledColor}" Offset="0" />
                    <GradientStop Color="{StaticResource ButtonDisabledColorAlt}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root"
                        BorderThickness="{TemplateBinding Property=BorderThickness}"
                        Padding="{TemplateBinding Property=Padding}"
                        TextBlock.Foreground="{TemplateBinding Property=Foreground}"
                        Background="{TemplateBinding Property=Background}"
                        BorderBrush="{TemplateBinding Property=BorderBrush}"
                        RenderTransformOrigin="0.5,0.5"
                        CornerRadius="3">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="Scale" />
                                <TranslateTransform x:Name="Translate" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Rectangle
                                Grid.Row="0"
                                Margin="-4,-4,-4,0"
                                IsHitTestVisible="False"
                                RadiusX="4"
                                RadiusY="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#29FFFFFF" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle
                                Grid.Row="2"
                                Margin="-4,0,-4,-4"
                                IsHitTestVisible="False"
                                RadiusX="4"
                                RadiusY="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#3A000000" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter
                                x:Name="PART_ContentHost"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                OverridesDefaultStyle="True"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonNormalColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonNormalColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonHoverColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonHoverColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Translate"
                                            Storyboard.TargetProperty="Y"
                                            To="-2"
                                            Duration="0:0:0.45">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Translate"
                                            Storyboard.TargetProperty="Y"
                                            To="0"
                                            Duration="0:0:0.45">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource DarkBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Root">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonPressedColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonPressedColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            From="1"
                                            To="0.90"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            From="1"
                                            To="0.90"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            From="0.90"
                                            To="1"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            From="0.90"
                                            To="1"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{StaticResource ButtonDisabledColor}" Offset="0" />
                    <GradientStop Color="{StaticResource ButtonDisabledColorAlt}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Root"
                        BorderThickness="{TemplateBinding Property=BorderThickness}"
                        Padding="{TemplateBinding Property=Padding}"
                        TextBlock.Foreground="{TemplateBinding Property=Foreground}"
                        BorderBrush="{TemplateBinding Property=BorderBrush}"
                        Background="{TemplateBinding Property=Background}"
                        RenderTransformOrigin="0.5,0.5"
                        CornerRadius="3">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="Scale" />
                                <TranslateTransform x:Name="Translate" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Rectangle
                                Grid.Row="0"
                                Margin="-4,-4,-4,0"
                                IsHitTestVisible="False"
                                RadiusX="4"
                                RadiusY="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#29FFFFFF" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle
                                Grid.Row="2"
                                Margin="-4,0,-4,-4"
                                IsHitTestVisible="False"
                                RadiusX="4"
                                RadiusY="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#3A000000" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter
                                x:Name="PART_ContentHost"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                OverridesDefaultStyle="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Root">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonPressedColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonPressedColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource BrightBackgroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource DarkBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Root">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonPressedColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonPressedColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            From="1"
                                            To="0.90"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            From="1"
                                            To="0.90"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            From="0.90"
                                            To="1"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            From="0.90"
                                            To="1"
                                            Duration="0:0:0.05">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{StaticResource ButtonHoverColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource ButtonHoverColorAlt}" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Translate"
                                            Storyboard.TargetProperty="Y"
                                            To="-2"
                                            Duration="0:0:0.45">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Translate"
                                            Storyboard.TargetProperty="Y"
                                            To="0"
                                            Duration="0:0:0.45">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Style.Resources>
            <SolidColorBrush
                x:Key="{x:Static SystemColors.HighlightBrushKey}"
                Color="Transparent" />
            <SolidColorBrush
                x:Key="{x:Static SystemColors.ControlBrushKey}"
                Color="Transparent" />
            <SolidColorBrush
                x:Key="{x:Static SystemColors.WindowBrushKey}"
                Color="Transparent" />
        </Style.Resources>

        <Setter Property="Padding" Value="2" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                Property="Background"
                                Value="{StaticResource BrightBackgroundBrush}" />
                            <Setter TargetName="Bd"
                                Property="BorderBrush"
                                Value="{StaticResource ForegroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                    Value="False" />
                                <Condition Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                Property="Background"
                                Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="Bd"
                                Property="BorderBrush"
                                Value="{StaticResource DepressedBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                    Value="True" />
                                <Condition Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                Property="Background"
                                Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="Bd"
                                Property="BorderBrush"
                                Value="{StaticResource HighlightBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                            Value="False">
                            <Setter TargetName="Bd"
                                Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    </Style>

    <Style TargetType="ListBox" x:Key="ContentListBox">
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="CanContentScroll" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="ItemsControl">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"
                        VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                        Background="{TemplateBinding Panel.Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            Padding="{TemplateBinding Control.Padding}"
                            Focusable="False">
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Margin="0,0,5,0" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Background="Transparent"
                        BorderBrush="{StaticResource DepressedBrush}"
                        CornerRadius="1"
                        BorderThickness="1">
                        <Path
                            Name="Path"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{StaticResource ForegroundBrush}"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter
                                TargetName="Path"
                                Property="Fill"
                                Value="{StaticResource DepressedBrush}" />
                            <Setter
                                TargetName="Border"
                                Property="BorderBrush"
                                Value="{StaticResource ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource HighlightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="1"
                        BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="BorderBrush"
                                TargetName="Border"
                                Value="{StaticResource ForegroundBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsDragging"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="Border"
                                Value="{StaticResource DarkBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="Transparent" />
            <RepeatButton
                Grid.Row="0"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
                Grid.Row="1"
                Name="PART_Track"
                IsDirectionReversed="True">
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="0,1,0,1"
                        Background="Transparent"
                        BorderBrush="{StaticResource DepressedBrush}" />
                </Track.Thumb>
            </Track>
            <RepeatButton
                Grid.Row="2"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Background="Transparent" />
            <RepeatButton
                Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
                Grid.Column="1"
                Name="PART_Track"
                IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="0,1,0,1"
                        Background="Transparent"
                        BorderBrush="{StaticResource DepressedBrush}" />
                </Track.Thumb>
            </Track>
            <RepeatButton
                Grid.Column="2"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <Style TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template"
                    Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
                    Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrightBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="2" />
    </Style>
    <Style TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Style="{StaticResource PopupBorderStyle}">
                        <ContentPresenter
                            Margin="4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonStyle"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
        TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="Ellipse"
                        StrokeThickness="1">
                        <Ellipse.Stroke>
                            <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource BrightBackgroundColor}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource DarkBackgroundColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Ellipse.Stroke>
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{StaticResource ButtonNormalColor}" />
                        </Ellipse.Fill>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Ellipse"
                                            Duration="0:0:0.1"
                                            To="{StaticResource ButtonHoverColor}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Ellipse"
                                            Duration="0:0:0.1"
                                            To="{StaticResource ButtonPressedColor}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Ellipse"
                                            Duration="0:0:0.1"
                                            To="{StaticResource ButtonDisabledColor}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar
                x:Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Top"
                Height="4"
                Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{StaticResource ForegroundColor}" />
                </TickBar.Fill>
            </TickBar>
            <Border x:Name="TrackBackground"
                Grid.Row="1"
                Background="{StaticResource BrightBackgroundBrush}"
                Margin="0"
                Height="8"
                CornerRadius="2" />
            <Track Grid.Row="1"
                x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
                Grid.Row="2"
                Fill="{TemplateBinding Foreground}"
                SnapsToDevicePixels="True"
                Placement="Bottom"
                Visibility="Collapsed"
                Height="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter
                    TargetName="TopTick"
                    Property="Visibility"
                    Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter
                    TargetName="BottomTick"
                    Property="Visibility"
                    Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter
                    TargetName="TopTick"
                    Property="Visibility"
                    Value="Visible" />
                <Setter
                    TargetName="BottomTick"
                    Property="Visibility"
                    Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinWidth" Value="104" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
    </Style>

</ResourceDictionary>